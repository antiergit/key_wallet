import zookeeperConfig from "../connections/zookeeper.conn";
const name = 'novatide';
export const config = {

   DB_USER: zookeeperConfig.config.DB_USER,
   DB_HOST_READ: zookeeperConfig.config.DB_HOST_READ,
   DB_HOST_WRITE: zookeeperConfig.config.DB_HOST_WRITE,
   DB_NAME: zookeeperConfig.config.DB_NAME,
   DB_PASSWORD: zookeeperConfig.config.DB_PASSWORD,
   DB_PORT: zookeeperConfig.config.DB_PORT,
   DEPOSIT_WITHDRAW_PROCESS_TRON: zookeeperConfig.config.DEPOSIT_WITHDRAW_PROCESS_TRON,
   TRON_WALLET_ADDRESS: `${name}_${zookeeperConfig.config.SERVER}_${zookeeperConfig.config.TRON_WALLET_ADDRESS}`,
   PENDING_WITHDRAWAL_TX_PROCESS_TRON: zookeeperConfig.config.PENDING_WITHDRAWAL_TX_PROCESS_TRON,
   RABBIT_MQ: zookeeperConfig.config.RABBIT_MQ_CONN,
   REDIS_CONN: zookeeperConfig.config.REDIS_CONN,//
   MIN_BLOCK_CONFIRMATIONS_TRON: zookeeperConfig.config.MIN_BLOCK_CONFIRMATIONS_TRON,
   TOKEN_TYPE_TRON: `${name}_${zookeeperConfig.config.SERVER}_${zookeeperConfig.config.TOKEN_TYPE_TRON}`,
   TOKEN_TYPE10_TRON: `${name}_${zookeeperConfig.config.SERVER}_${zookeeperConfig.config.TOKEN_TYPE10_TRON}`,
   COIN_FAMILY_TRON: zookeeperConfig.config.COIN_FAMILY_TRON,
   KEYS: {
      FCM_PUSH: zookeeperConfig.config.FCM_PUSH
   },
   PUSH_NOTIFICATION_QUEUE: zookeeperConfig.config.PUSH_NOTIFICATION_QUEUE,
   REDISKEYS: {
      TRON_BLOCKS: `${name}_${zookeeperConfig.config.SERVER}_${zookeeperConfig.config.TRON_BLOCKS} `,
      OLD_BLOCK_TRON: zookeeperConfig.config.OLD_BLOCK_TRON,
      NEW_BLOCK_TRON: zookeeperConfig.config.NEW_BLOCK_TRON,
      ALL_PROCESSES: zookeeperConfig.config.ALL_PROCESSES,
      TRON_ERROR_LOGS: zookeeperConfig.config.TRON_ERROR_LOGS,
      NODE_ALERT_TRON: zookeeperConfig.config.NODE_ALERT_TRON,
      SPECIFIC_BLOCK_TRON: zookeeperConfig.config.SPECIFIC_BLOCK_TRON

   },
   NODE_ISSUE_ALERT_EMAIL: zookeeperConfig.config.NODE_ISSUE_ALERT_EMAIL,
   MAILGUN: {
      MAILGUN_API_KEY: zookeeperConfig.config.MAILGUN_API_KEY,
      MAILGUN_DOMAIN: zookeeperConfig.config.MAILGUN_DOMAIN,
      MAILGUN_BASE_URL: zookeeperConfig.config.MAILGUN_BASE_URL,
      FROM_GMAIL: zookeeperConfig.config.FROM_GMAIL
   },
   TRANSACTIONS: {
      tron_behined_transactions: zookeeperConfig.config.tron_behined_transactions,
      tron_all_blocks: zookeeperConfig.config.tron_all_blocks,
   },
   NODE: {
      ETH_RPC_URL: zookeeperConfig.config.ETH_RPC_URL,
      BTC_RPC_URL: zookeeperConfig.config.BTC_RPC_URL,
      BTC_API_KEY: zookeeperConfig.config.BTC_API_KEY,
      TRX_RPC_URL: zookeeperConfig.config.TRX_RPC_URL,
      TRX_API_KEY: zookeeperConfig.config.TRX_API_KEY,
      BNB_RPC_URL: zookeeperConfig.config.BNB_RPC_URL
   },
   LAST_BLOCK_FILE_PATH: __dirname + "/lastBlock.txt",
   READ_BEHINED_BLOCK_TRON: `${name}_${zookeeperConfig.config.SERVER}_${zookeeperConfig.config.READ_BEHINED_BLOCK_TRON}`,
   BLOCKS: zookeeperConfig.config.BLOCKS,
   USER_ALL_COINS_BALANCE_UPDATE: zookeeperConfig.config.USER_ALL_COINS_BALANCE_UPDATE,
   TRON_UPDATE_BALANCE_OF_COIN: zookeeperConfig.config.TRON_UPDATE_BALANCE_OF_COIN,
   BACKEND_WALLET_ADDRESSES: zookeeperConfig.config.BACKEND_WALLET_ADDRESSES,


   CONTRACT_ABI: [
      {
         constant: true,
         inputs: [],
         name: "name",
         outputs: [{ name: "", type: "string" }],
         payable: false,
         stateMutability: "view",
         type: "function",
      },
      {
         constant: false,
         inputs: [],
         name: "stop",
         outputs: [],
         payable: false,
         stateMutability: "nonpayable",
         type: "function",
      },
      {
         constant: false,
         inputs: [
            { name: "_spender", type: "address" },
            { name: "_value", type: "uint256" },
         ],
         name: "approve",
         outputs: [{ name: "", type: "bool" }],
         payable: false,
         stateMutability: "nonpayable",
         type: "function",
      },
      {
         constant: true,
         inputs: [],
         name: "totalSupply",
         outputs: [{ name: "", type: "uint256" }],
         payable: false,
         stateMutability: "view",
         type: "function",
      },
      {
         constant: false,
         inputs: [
            { name: "_from", type: "address" },
            { name: "_to", type: "address" },
            { name: "_value", type: "uint256" },
         ],
         name: "transferFrom",
         outputs: [{ name: "", type: "bool" }],
         payable: false,
         stateMutability: "nonpayable",
         type: "function",
      },
      {
         constant: true,
         inputs: [],
         name: "INITIAL_SUPPLY",
         outputs: [{ name: "", type: "uint256" }],
         payable: false,
         stateMutability: "view",
         type: "function",
      },
      {
         constant: true,
         inputs: [],
         name: "decimals",
         outputs: [{ name: "", type: "uint8" }],
         payable: false,
         stateMutability: "view",
         type: "function",
      },
      {
         constant: false,
         inputs: [
            { name: "to", type: "address" },
            { name: "value", type: "uint256" },
         ],
         name: "mint",
         outputs: [{ name: "", type: "bool" }],
         payable: false,
         stateMutability: "nonpayable",
         type: "function",
      },
      {
         constant: false,
         inputs: [{ name: "_value", type: "uint256" }],
         name: "burn",
         outputs: [],
         payable: false,
         stateMutability: "nonpayable",
         type: "function",
      },
      {
         constant: false,
         inputs: [
            { name: "_spender", type: "address" },
            { name: "_subtractedValue", type: "uint256" },
         ],
         name: "decreaseApproval",
         outputs: [{ name: "", type: "bool" }],
         payable: false,
         stateMutability: "nonpayable",
         type: "function",
      },
      {
         constant: true,
         inputs: [],
         name: "decimalFactor",
         outputs: [{ name: "", type: "uint256" }],
         payable: false,
         stateMutability: "view",
         type: "function",
      },
      {
         constant: true,
         inputs: [{ name: "_owner", type: "address" }],
         name: "balanceOf",
         outputs: [{ name: "balance", type: "uint256" }],
         payable: false,
         stateMutability: "view",
         type: "function",
      },
      {
         constant: true,
         inputs: [],
         name: "stopped",
         outputs: [{ name: "", type: "bool" }],
         payable: false,
         stateMutability: "view",
         type: "function",
      },
      {
         constant: true,
         inputs: [],
         name: "owner",
         outputs: [{ name: "", type: "address" }],
         payable: false,
         stateMutability: "view",
         type: "function",
      },
      {
         constant: true,
         inputs: [],
         name: "symbol",
         outputs: [{ name: "", type: "string" }],
         payable: false,
         stateMutability: "view",
         type: "function",
      },
      {
         constant: false,
         inputs: [
            { name: "_to", type: "address" },
            { name: "_value", type: "uint256" },
         ],
         name: "transfer",
         outputs: [{ name: "", type: "bool" }],
         payable: false,
         stateMutability: "nonpayable",
         type: "function",
      },
      {
         constant: false,
         inputs: [],
         name: "start",
         outputs: [],
         payable: false,
         stateMutability: "nonpayable",
         type: "function",
      },
      {
         constant: false,
         inputs: [
            { name: "_spender", type: "address" },
            { name: "_addedValue", type: "uint256" },
         ],
         name: "increaseApproval",
         outputs: [{ name: "", type: "bool" }],
         payable: false,
         stateMutability: "nonpayable",
         type: "function",
      },
      {
         constant: true,
         inputs: [
            { name: "_owner", type: "address" },
            { name: "_spender", type: "address" },
         ],
         name: "allowance",
         outputs: [{ name: "", type: "uint256" }],
         payable: false,
         stateMutability: "view",
         type: "function",
      },
      {
         constant: false,
         inputs: [{ name: "newOwner", type: "address" }],
         name: "transferOwnership",
         outputs: [],
         payable: false,
         stateMutability: "nonpayable",
         type: "function",
      },
      {
         inputs: [{ name: "ownerAdrs", type: "address" }],
         payable: false,
         stateMutability: "nonpayable",
         type: "constructor",
      },
      {
         anonymous: false,
         inputs: [
            { indexed: true, name: "burner", type: "address" },
            { indexed: false, name: "value", type: "uint256" },
         ],
         name: "Burn",
         type: "event",
      },
      {
         anonymous: false,
         inputs: [
            { indexed: true, name: "previousOwner", type: "address" },
            { indexed: true, name: "newOwner", type: "address" },
         ],
         name: "OwnershipTransferred",
         type: "event",
      },
      {
         anonymous: false,
         inputs: [
            { indexed: true, name: "owner", type: "address" },
            { indexed: true, name: "spender", type: "address" },
            { indexed: false, name: "value", type: "uint256" },
         ],
         name: "Approval",
         type: "event",
      },
      {
         anonymous: false,
         inputs: [
            { indexed: true, name: "from", type: "address" },
            { indexed: true, name: "to", type: "address" },
            { indexed: false, name: "value", type: "uint256" },
         ],
         name: "Transfer",
         type: "event",
      },
   ],
};
